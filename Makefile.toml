# Better Documentation
# Manual for Students
# Brush-Up C Concepts (Questions about Pointers)
# Virtual Memory + Copy-On-Write

[env]
BOOTLOADER_FILES = """
src/bootloader/linker.ld
build/multiboot.o
build/boot.o
build/long.o
build/kernel.a
"""
DEBUG_MODE = "console"

# Ensure everything is in place and clear build folder
[tasks.clean]
clear = true
script = [
    "mkdir -p build",
    "rm -rf ./build/*",
    "mkdir -p build/boot",
    "mkdir -p build/boot/grub",
]

# Build Kernel and move it to build folder
[tasks.kernel]
clear = true
script = [
    "cargo build --target x86_64-target.json --features ${DEBUG_MODE}",
    "cp target/x86_64-target/debug/libbuzz_os.a build/kernel.a"
]

# Build bootloader asm files
[tasks.bootloader]
dependencies = ["clean", "kernel"]
script = [
    "nasm -f elf64 src/bootloader/long.asm -o build/long.o",
    "nasm -f elf64 src/bootloader/boot.asm -o build/boot.o",
    "nasm -f elf64 src/bootloader/multiboot.asm -o build/multiboot.o",
    "ld -n -o build/boot/kernel.bin -T ${BOOTLOADER_FILES}",
    # "objdump -S build/boot/kernel.bin > build/kernel.asm",
    "cp src/bootloader/grub.cfg build/boot/grub/grub.cfg",
    "grub-mkrescue -d /usr/lib/grub/i386-pc -o build/os.iso build"
]

[tasks.default]
alias = "debug"

[tasks.debug]
dependencies = ["bootloader"]
script = [
    "./scripts/build.sh"
]

[tasks.dry-run]
script = [
    "qemu-system-x86_64 -cdrom build/os.iso"
]